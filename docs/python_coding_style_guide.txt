Source
-------
    https://www.python.org/dev/peps/pep-0008/

NOTE
----
    Only a snippet is taken from the above link and mentioned below for
    quick reference. 

Indentation
-----------
    (1) Use 4 spaces for indentation
    (2) Indentation for continuation line:
        foo = long_function_name(var_one, var_two, 
                                 var_three, var_four)

        Note: There are other examples listed as recommended and not
              recommended on the above link.

    (3) Multi-line conditional statement's distinction from its definition:
        if (this_is_one_thing and 
            that_is_another_thing):
            # Since both conditions are true, we can frobnicate.
            do_something()

Tabs or Spaces
--------------
    Spaces are the preferred indentation method.

Maximum line length
-------------------
    Limit all lines to a maximum of 79 characters.

Line break when a binary operator is used
-----------------------------------------
    Line break before the binary operators:
        income = (daily_wage
                  + extra_income
                  - expenses)

Blank lines
-----------
    (1) Surround top-level function and class definitions with two blank lines.
    (2) Method definitions inside a class are surrounded by a single blank line.
    (3) Blank line may be used to separate groups of related functions.
    (4) Blank lines may be omitted between a bunch of related one-liners.
    (5) Blank lines should be used to separate logical sections in functions.

Source File Encoding
--------------------
    (1) Code in the core Python distribution should always use UTF-8 (or ASCII in
        Python 2).
    (2) Files using ASCII (in Python 2) or UTF-8 (in Python 3) should not have an
        encoding declaration.

Imports
-------
    (1) Imports should usually be on separate lines. But it is okay to say: 
        from subprocess import Popen, PIPE
    (2) Imports are always put at the top of the file, just after any module
        comments and docstrings, and before module globals and constants.

        Imports should be grouped in the following order:
        (a) standard library imports
        (b) related third party imports
        (c) local application/library specific imports

        You should put a blank line between each group of imports.
    (3) Absolute imports are recommended.
    (4) Wildcard imports should be avoided. 

Module level dunder names
-------------------------
    Module level "dunders" (i.e. names with two leading and two trailing
    underscores) such as __all__, __author__, __version__, etc. should be
    placed after the module docstring but before any import statements except
    from __future__ imports.
    
    For example:
        """This is an example module. """
        
        from __future__ import barry_as_FLUFL
        
        __all__ = ['a', 'b', 'c']
        __version__ = '0.1'
        __author__ = 'Cardinal Biggles'
        
        import os
        import sys

String Quotes
-------------
    Single-quoted strings and double-quoted strings are the same. When a string
    contains single or double quote characters, use the other one to avoid
    backslashes in the string. It improves readability.
    
    Also read:
        https://www.python.org/dev/peps/pep-0257/


